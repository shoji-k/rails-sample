<p id="error"></p>
<%= form_for(editor) do |f| %>
  <% if editor.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(editor.errors.count, "error") %> prohibited this editor from being saved:</h2>

      <ul>
      <% editor.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :title %>
    <%= f.text_field :title %>
  </div>

  <div class="field">
    <%= f.label :body %>
    <%= f.cktext_area :body %>
  </div>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>

<p>
  <button id="create">create by ajax</button>
  <button id="update">update by ajax</button>
</p>
<p>
  <button id="tex-to-html">tex to html</button>
  <button id="html-to-tex">html to tex</button>
</p>

<script>
$(function() {
  var AUTOSAVEINTERVAL = 2000;
  var editor = window.CKEDITOR.instances['editor_body'];

  <% if !@ajaxUrl.nil? %>
  var change_flg = 0;
  editor.on('change', function() {
    change_flg = 1;
  });
  // autosave
  setInterval(function() {
    if (change_flg == 1) {
      console.log(1);
      change_flg = 0;
      update();
    }
  }, AUTOSAVEINTERVAL);

  function update() {
    var that = this;
    var title = $('#editor_title').val();
    var body = editor.getData();

    $('#error').text('');
    if (! title) {
      $('#error').text('タイトルを入力してください');
      return false;
    }

    $(that).prop('disabled', true).append('<div id="spin" class="spinner"></div>');
    $.ajax({
      type: 'PUT',
      cache: false,
      data: {
        editor: {title: title, body: body}
      },
      url: '<%= @ajaxUrl %>',
      dataType: 'json',
      success: function(res){
        $(that).after('<span id="result">保存されました</span>');
      },
      error: function(res){
        console.log(res);
      },
      complete: function(res) {
        $(that).prop('disabled', false);
        $('#spin').fadeOut('slow', function() {
          $(this).remove();
        });
        $('#result').fadeOut(3000, function() {
          $(this).remove();
        });
      }
    });
  };

  $('#update').on('click', update);
  <% end %>

  $('#create').on('click', function() {
    var data = {
      editor: {title: 'create', body: '新規投稿された'}
    };

    $.ajax({
      type: 'POST',
      cache: false,
      data: data,
      url: '/editors.json',
      dataType: 'json',
      success: function(res){
        console.log(res);
      },
      error: function(res){
        console.log(res);
      }
    });
  });

});
</script>
